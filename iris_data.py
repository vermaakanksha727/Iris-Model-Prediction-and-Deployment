# -*- coding: utf-8 -*-
"""Iris_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X4nBW89IEHQt_yUbrKxzzkKIwuoKIGOM
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import confusion_matrix,accuracy_score

from sklearn import datasets
iris=datasets.load_iris()

iris

df=pd.DataFrame(data=iris.data,columns=['sepal_length','sepal_width','petal_length','petal_width'])
df['class']=iris.target

df.head()

df.shape

df.dtypes

df.describe()

df.groupby('class').size()

df['class']=df['class'].replace([0,1,2],['setosa', 'versicolor', 'virginica'])

df.head()

df.dtypes

#pairwise plot
sns.pairplot(df.drop('class',1),height=2)

X=df.drop('class',1)
y=df['class']

#heatmap
sns.heatmap(X.corr(),annot=True,square=True)

#train test split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=7)

X_train.shape,X_test.shape,y_train.shape,y_test.shape

#logistic regression
logreg=LogisticRegression()
logreg.fit(X_train,y_train)

y_pred=logreg.predict(X_test)

y_pred

accuracy_score(y_test,y_pred)

confusion_matrix(y_test,y_pred)

#decision tree
mod_dt = DecisionTreeClassifier(max_depth = 3, random_state = 1)
mod_dt.fit(X_train,y_train)
pred=mod_dt.predict(X_test)

pred

accuracy_score(y_test,pred)

confusion_matrix(y_test,pred)

pickle.dump(logreg,open('log_model.pkl','wb'))

pickle.dump(mod_dt,open('dtree_model.pkl','wb'))

